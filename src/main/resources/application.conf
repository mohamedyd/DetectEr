
data.BlackOak {
  clean-data-path = "/Users/visenger/research/datasets/BlackOak/Archive/groundDB.csv"
  dirty-data-path = "/Users/visenger/research/datasets/BlackOak/Archive/inputDB.csv"
}

data.hosp {
  clean.1k = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-1K/hospital_1k_with_rowid.csv"
  dirty.1k = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-1K/dirty/dirty_hosp_1k_with_rowid.csv"
  gold.1k = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-1K/gold_1k"

  clean.10k = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-10K/hospital_10k_with_rowid.csv"
  dirty.10k = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-10K/dirty/dirty_hosp_10k_with_rowid.csv"
  gold.10k = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-10K/gold_10k"

  clean.100k = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-100K/hospital_100k_with_rowid.csv"
  dirty.100k = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-100K/dirty/dirty_hosp_100k_with_rowid.csv"
  gold.100k = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-100K/gold_100k"

  fds.rules.folder = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-10K/rules-vio"
  fds.rules.file = "fds.txt"
}

data.salaries {
  clean = "/Users/visenger/research/datasets/clean-and-dirty-data/SALARIES/salaries_small/salaries-1_with_id.csv"
  dirty = "/Users/visenger/research/datasets/clean-and-dirty-data/SALARIES/salaries_small/dirty/dirty_salaries-1_with_id.csv"
  gold = "/Users/visenger/research/datasets/clean-and-dirty-data/SALARIES/salaries_small/gold_small"
}


dboost.BlackOak {
  result.dir = "/Users/visenger/research/datasets/BlackOak/Archive/outputDBoost-newHighliting.csv"
  result.hist = "/Users/visenger/research/datasets/BlackOak/Archive/hist-0.9-0.01-outputDBoost.txt"
  result.gaus = "/Users/visenger/research/datasets/BlackOak/Archive/gaussian1.5-output.txt"
  detect.hits = "/Users/visenger/research/datasets/BlackOak/Archive/dboost-detect-result/dboost-detect-result.txt"
  detect.gaus = "/Users/visenger/research/datasets/BlackOak/Archive/dboost-gaus-detect-result/dboost-gaus-detect-result.txt"
}

dboost.hosp {
  detect.gauss = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-10K/outliers/gauss/dtct_hosp_10k_with_rowid.txt"
  detect.hist = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-10K/outliers/hist/dtct_hosp_10k_with_rowid.txt"

  result.gauss = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-10K/outliers/gauss/outliers-gauss-result"
  result.hist = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-10K/outliers/hist/outliers-hist-result"
}

dboost.small {
  clean.data = "/Users/visenger/research/datasets/BlackOak/Archive/small-groundDB.csv"
  dirty.data = "/Users/visenger/research/datasets/BlackOak/Archive/small-inputDB.csv"
  gold.log.folder = "/Users/visenger/research/datasets/BlackOak/Archive/gold-standard-small"
  gold.log.file = "/Users/visenger/research/datasets/BlackOak/Archive/gold-standard-small/gold-standard-small.txt"
  output.folder = "/Users/visenger/research/datasets/BlackOak/Archive/outlier-output"
  eval.folder = "/Users/visenger/research/datasets/BlackOak/Archive/eval-output"
}

trifacta.hosp {
  vio = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-10K/pattern-vio/trifacta_result_dirty_hosp_10k_with_rowid.csv"
  result.folder = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-10K/pattern-vio/trifacta-result"

}

trifacta.salaries {
  vio = ""
}

nadeef.rules.vio {
  result.folder = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-10K/rules-vio/nadeef-result"
}

nadeef.dedup {
  result.folder = "/Users/visenger/research/datasets/clean-and-dirty-data/HOSP-10K/dedup"
}



deduplication {
  # rule names shoud correspond to the nadeef clean path rules for udf (deduplication)
  rule.for.dirty.data = "dedupHosp"
  rule.for.gold.data = "dedupBlackOakGold"
}

output {


  blackouak.goldstandard = "/Users/visenger/research/datasets/BlackOak/Archive/gold-standard"
  blackouak.gold.file = "/Users/visenger/research/datasets/BlackOak/Archive/gold-standard/gold-standard.txt"

  # this contains an additional column with labels: 1/0 -> error/non-error
  blackoak.goldstandard.ground.truth.folder = "/Users/visenger/research/datasets/BlackOak/Archive/gold-standard-ground-truth"
  blackoak.goldstandard.ground.truth.file = "/Users/visenger/research/datasets/BlackOak/Archive/gold-standard-ground-truth/gold-standard-ground-truth.csv"

  dboost.gaus.result.folder = "/Users/visenger/research/datasets/BlackOak/Archive/dboost-gaus-detect-result"
  dboost.gaus.result.file = "/Users/visenger/research/datasets/BlackOak/Archive/dboost-gaus-detect-result/dboost-gaus-detect-result.txt"
  dboost.result.folder = "/Users/visenger/research/datasets/BlackOak/Archive/dboost-detect-result"
  dboost.result.file = "/Users/visenger/research/datasets/BlackOak/Archive/dboost-detect-result/dboost-detect-result.txt"

  trifacta.result.folder = "/Users/visenger/research/datasets/BlackOak/Archive/trifacta-detect-result"
  trifacta.result.file = "/Users/visenger/research/datasets/BlackOak/Archive/trifacta-detect-result/trifacta-detect-result.csv"

  nadeef.detect.result.folder = "/Users/visenger/research/datasets/BlackOak/Archive/nadeef-detect-result"
  nadeef.detect.result.file = "/Users/visenger/research/datasets/BlackOak/Archive/nadeef-detect-result/nadeef-detect-result.txt"

  nadeef.deduplication.result.folder = "/Users/visenger/research/datasets/BlackOak/Archive/nadeef-deduplication-result"
  nadeef.deduplication.result.file = "/Users/visenger/research/datasets/BlackOak/Archive/nadeef-deduplication-result/nadeef-deduplication-result.csv"

  full.result.folder = "/Users/visenger/research/datasets/BlackOak/Archive/full-result"
  full.result.file = "/Users/visenger/research/datasets/BlackOak/Archive/full-result/full-result.csv"
}

model {

  full.result.folder = "/Users/visenger/research/datasets/BlackOak/Archive/full-result-model"
  full.result.file = "/Users/visenger/research/datasets/BlackOak/Archive/full-result-model/full-result-model.txt"

  matrix.folder = "/Users/visenger/research/datasets/BlackOak/Archive/matrix"
  matrix.file = "/Users/visenger/research/datasets/BlackOak/Archive/matrix/matrix.csv"
  libsvm.folder = "/Users/visenger/research/datasets/BlackOak/Archive/libsvm"
  prediction.folder = "/Users/visenger/research/datasets/BlackOak/Archive/prediction"
}

dc.rules {
  path = "/Users/visenger/research/datasets/BlackOak/Archive/"
  file = "fds-modified.txt"
  noisy = ""

}

spark.config {
  local.ip = "spark.local.ip"
  local.ip.value = "192.168.253.138"

  driver.memory = "spark.driver.memory"
  driver.memory.value = "10g"

  executor.memory = "spark.executor.memory"
  executor.memory.value = "8g"
}

db.postgresql {
  url = "jdbc:postgresql://localhost:5432/unittest"
  user = "tester"
  password = "tester"
  driver = "org.postgresql.Driver"
}

some {
  list = ["foo", "bar", "bla"]
}

test {
  # todo: just add files
  clean.data = ""
  dirty.data = ""
  ground.truth = ""
}